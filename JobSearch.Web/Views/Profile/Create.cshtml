@model JobSearch.Model.ProfileViewModel
@{
    ViewBag.Title = "CreateProfile";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script type="text/javascript">
    $(function () {
        // We can attach the `fileselect` event to all file inputs on the page
        $(document).on('change', ':file', function () {
            var input = $(this),
                numFiles = input.get(0).files ? input.get(0).files.length : 1,
                label = input.val().replace(/\\/g, '/').replace(/.*\//, '');
            input.trigger('fileselect', [numFiles, label]);
        });

        // We can watch for our custom `fileselect` event like this
        $(document).ready(function () {
            $(':file').on('fileselect', function (event, numFiles, label) {

                var input = $(this).parents('.input-group').find(':text'),
                    log = numFiles > 1 ? numFiles + ' files selected' : label;

                if (input.length) {
                    input.val(log);
                } else {
                    if (log) alert(log);
                }
            });
        });
    });
</script>
<link href="/JobSearch/Content/assets/css/shop-main.css" rel="stylesheet" />
<div class="container" data-ng-app="ngmodule">
    <div class="account-box login-box box-with-help" style="margin-bottom:10px">
        <div style="margin:10px">
            <div>
                <!-- BREADCRUMBS -->
                <ol class="breadcrumb link-accent separator-arrow">
                    <li><a href="~/" title="Home"><i class="fa fa-home"></i></a></li>
                    <li class="active">Create Profile</li>
                </ol>
                <!-- END BREADCRUMBS -->
                <!-- LOGIN BOX -->
                <div class="row">
                    @*<form class="form-horizontal margin-bottom-50px form-billing-shipping" id="form2" data-parsley-validate novalidate role="form">*@
                    @*@using (Html.BeginForm("create", "profile", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form", name = "form" }))*@
                    @using (Html.BeginForm("create", "profile", FormMethod.Post, new { enctype = "multipart/form-data" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="row">
                            <div class="col-sm-6">
                                <div class="billing-address">
                                    <h3>Contact Details</h3>
                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.ProfileName)
                                                @Html.EditorFor(model => model.ProfileName, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.ProfileName, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.ProfileDescription)
                                                @Html.EditorFor(model => model.ProfileDescription, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.ProfileDescription, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.Dob)
                                                @Html.EditorFor(model => model.Dob, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Dob, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.Email)
                                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.PhoneNumber)
                                                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.Gender)
                                                @Html.EnumDropDownListFor(model => model.Gender, htmlAttributes: new { @class = "form-control" })
                                            </div>
                                        </div>

                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-6">
                                <div class="shipping-address">
                                    <h3>Professional Details</h3>
                                    <div id="shipping-inputs" class="row">
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.CurrentLocation)
                                                @Html.EditorFor(model => model.CurrentLocation, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.CurrentLocation, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.CurrentCtc)
                                                @Html.EditorFor(model => model.CurrentCtc, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.CurrentCtc, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.CurrentRole)
                                                @Html.EditorFor(model => model.CurrentRole, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.CurrentRole, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.PreferredLocation)
                                                @Html.EditorFor(model => model.PreferredLocation, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.PreferredLocation, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.Experience);
                                                @Html.EditorFor(model => model.Experience, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Experience, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>

                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                @{ Html.RenderPartial("_EducationDetails", Model.EducationViewModel);}
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12" style="padding:10px">
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="billing-address">
                                    <h3>Enter Skills</h3>
                                    @Html.LabelFor(model => model.Skill);
                                    @Html.EditorFor(model => model.Skill, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Skill, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="billing-address">
                                    <h3>Resume</h3>
                                    <div id="shipping-inputs">

                                        <div class="input-group">
                                            <label class="input-group-btn">
                                                <span class="btn btn-primary">
                                                    Browse&hellip;
                                                    @Html.TextBoxFor(m => m.FileUpload, new { type = "file", accept = "application/msword, application/pdf", style = "display:none;width:500px", required = "true", data_val_required = "Oops, select the logo first!" })
                                                    @Html.ValidationMessageFor(x => x.FileUpload)
                                                </span>
                                            </label>
                                            <input type="text" placeholder="Select PDF/DOC Files" class="form-control" readonly style="min-width:200px;max-width:300px">

                                        </div>
                                        <div style="clear:both">
                                            @if (!string.IsNullOrEmpty(Model.ResumeFileName))
                                            {
                                                @Html.LabelFor(model => model.ResumeFileName)
                                                @Html.Raw(" ")
                                                @Html.LabelFor(model => model.ResumeFileName, Model.ResumeFileName)
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row" style="margin-top:20px">
                            <div class="col-md-4"></div>
                            <div class="col-md-4">
                                <input type="submit" class="btn btn-primary btn-block register-box" value="Create Profile" />
                            </div>
                            <div class="col-md-4"></div>
                        </div>
                        <div class="clearfix"></div>
                        @*</form>*@}
                </div>
                <!-- END LOGIN BOX -->
            </div>
        </div>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}